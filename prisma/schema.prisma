generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model driver {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ride       ride[]
}

model organization {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ride {
  id               String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  pickup_location  String   @db.VarChar(255)
  dropoff_location String   @db.VarChar(255)
  vehicle_id       String?  @db.Uuid
  driver_id        String?  @db.Uuid
  user_id          String?  @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  driver           driver?  @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicle          vehicle? @relation(fields: [vehicle_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  driver       driver[]
  organization organization[]
  ride         ride[]
  vehicle      vehicle[]
}

model vehicle {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  type       String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  ride       ride[]
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
